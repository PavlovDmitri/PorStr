% входные данные 
% Требуемое распределение
requireradius =  [0	0.08961	0.26882	0.44803	0.62724	0.80645	0.98566	1.16487	1.34409	1.5233	1.70251	1.88172	2.06093	2.24014	2.41935	2.59857	2.77778	2.95699	3.1362	3.31541	3.49462	3.67384	3.85305	4.03226	4.21147	4.39068	4.56989	4.7491	4.92832	5.10753	5.28674	5.46595	5.64516	5.82437	6.00358	6.1828	6.36201	6.54122	6.72043	6.89964	7.07885	7.25806	7.43728];
currentfraction = 1000

if currentfraction == 300
    requiredistribution = [1 1 0.99695 0.98395 0.96106 0.95313 0.88302 0.78795 0.68422 0.63942 0.53769 0.42218 0.38894 0.31196 0.24662 0.22254 0.20611 0.17902 0.15649 0.14318 0.03715 0.03225 0.02835 0.02775 0.02055 0.0165 0.00937 0.00487 0.00455 0 0 0 0 0 0 0 0 0 0 0 0 0];
    Fraction2PhaseReq = 0.375;
elseif currentfraction == 1000
    requiredistribution = [1 1 0.99766 0.98762 0.97273 0.96919 0.92812 0.8761 0.80081 0.76569 0.67032 0.57988 0.54688 0.45016 0.36228 0.28526 0.24936 0.2023 0.1663 0.15783 0.04513 0.03493 0.02417 0.02412 0.02226 0.01501 0.01502 0.01406 0.01332 0.01183 0.01176 0.01022 0 0 0 0 0 0 0 0 0 0];
    Fraction2PhaseReq = 0.373;
elseif currentfraction == 3000
    requiredistribution = [1 1 0.99846 0.99187 0.9857 0.98203 0.94869 0.90111 0.84699 0.82192 0.74582 0.64545 0.61284 0.52787 0.46281 0.39373 0.35451 0.30204 0.25009 0.24714 0.08782 0.07931 0.06448 0.0628 0.05533 0.03264 0.03222 0.02602 0.02546 0.02481 0.02033 0.01473 0.00864 0.00875 0.00847 0.00818 0.00799 0.00806 0.00795 0.00784 0.00759 0.00756 0];
    Fraction2PhaseReq = 0.365;
end
% количество требуемых радиусов
firstZero = find(~requiredistribution, 1, 'first');
lengthrad = ceil(requireradius(find(~requiredistribution, 1, 'first'))/2);

% размер системы
L= [20 20 20];
% радиусы сфер для построения
% for i = 1:lengthrad
% startradius(i) = i;
% %startdistribution(i) = 2*(lengthrad*2-i)+1;
% end
%startradius = [0.5 0.75 1 1.6 1.9 3.6];
if currentfraction == 300
    startradius = [0.5 0.75 1 1.6 1.9 2.5];
    startdistribution = [1.5 0.55	0.25	0.05 0.005 0.001];
elseif currentfraction == 1000
    startradius = [0.5 0.75 1 1.6 1.9 2.7];
    startdistribution = [1.5 0.55	0.35	0.15 0.005 0.001];
elseif currentfraction == 3000
    startradius = [0.5 0.75 1 1.6 1.9 3.6];
    startdistribution = [1.5 0.55	0.35	0.25 0.005 0.001];
end
% начальный коэффициент для доли фазы 0.763706562
koef2Phase = 772;
% погрешность доли фазы
Precision = 0.005;
% шаг в плоскости для постройки псд
turnPSD = 10;